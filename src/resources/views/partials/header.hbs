<style>
  .cart-modal::before {
    background: #4a4a4a;
    width: 10px;
    height: 20px;
    content:
      "";
    position: absolute;
    top: -10px;
    right: 67px;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-top: 10px solid transparent;
    transform: rotate(45deg);
  }

  .cover {
    width: 20px;
    height: 30px;
    background-color: #4a4a4a;
    position: absolute;
    top: 0;
    right: -2px;
  }
</style>
<header style="background-color: #303030;">
  <div class="container header">
    <div class="header-img">
      <a href="/">
        <img src="/img/logo.webp" alt="logo" style="max-width: 100%; height: auto;" />
      </a>
    </div>

    <div class="header-main">
      <ul class="menu-main">
        <li class="menu-item"><a href="/" class="leading-[3rem]">Trang chủ</a></li>
        <li class="menu-item menu-lv1">
          <a href="/collections" class="leading-[3rem]">Cửa hàng</a>
          <div class="sub-menu-lv2">
            <ul>
              <li>
                <a href="/collections/giay">Sản phẩm giày</a>
                <div class="sub-menu-lv3">
                  <ul class="menu-main-lv3">
                    <li><a href="/collections/giay-luyen-tap">Giày luyện tập</a></li>
                    <li><a href="/collections/giay-truot-van">Giày trượt ván</a></li>
                    <li><a href="/collections/giay-thoi-trang">Giày thời trang</a></li>
                  </ul>
                </div>
              </li>
              <li><a href="">Phụ kiện</a></li>
              <li><a href="">Ưu dãi</a></li>
            </ul>
          </div>
        </li>
        <li class="menu-item"><a href="/news" class="leading-[3rem]">News</a></li>
        <li class="menu-item"><a href="/support/feedback" class="leading-[3rem]">Hỗ trợ</a></li>
      </ul>
    </div>

    <div class="header-wrap-search">
      <div class="header-search">
        <div class="search-box wpo-wrapper-search">
          <form action="/search" class="searchform-product searchform-categoris ultimate-search">

            <div class="search-input">
              <input type="hidden" name="type" value="product" />
              {{! <input required="" id="inputSearchAuto-3" class="input-search" name="q" maxlength="40"
                autocomplete="off" type="text" size="20" placeholder="Tìm kiếm sản phẩm..." /> }}
              <div class="input-group mb-3 mt-3">
                <input required="" id="inputSearchAuto-3" name="q" maxlength="40" autocomplete="off" size="20"
                  type="text" class="form-control" placeholder="Tìm kiếm sản phẩm..." />
                <button type="submit" class="input-group-text">
                  <i class="fa fa-magnifying-glass"></i>
                </button>
              </div>
            </div>

          </form>
          <div id="ajaxSearchResults-3" class="smart-search-wrapper ajaxSearchResults" style="display: block;">
            <div class="resultsContent"></div>
          </div>
        </div>
      </div>
      <button class="close-search">
        <i class="fa-regular fa-circle-xmark"></i>
      </button>
    </div>

    <div class="header-action">
      <div class="text-center flex flex-col text-[#ffc107] font-medium header-acction-item search">
        {{! <a href="" class="text-center flex flex-col text-[#ffc107] font-medium"> }}
          <span class="mb-1"><i class="fa fa-magnifying-glass"></i></span>
          <span class="text-xs">Tìm kiếm</span>
          {{! </a> }}
      </div>
      <div>
        <div class="header-acction-item flex items-center">
          <div class="relative">
            <div class="header_cart text-center flex flex-col text-[#ffc107] font-medium">
              <span class="mb-1"><i class="fa fa-cart-shopping"></i></span>
              <span class="text-xs">Giỏ Hàng</span>
            </div>
            <span
              class="cart_amount absolute rounded-[100%] bg-red-800 text-white w-[20px] top-[-9px] right-[2px] h-[20px] text-center">0</span>
            {{! gio hang modal }}
            <div class="cart-modal hidden px-3 py-4 w-[450px] absolute right-[-55px] top-[50px] cursor-pointer z-50"
              style="background-color: #4a4a4a;">
              <h2 class="text-center text-xl">Gio hang</h2>
              <div class="template_cart border-y-[1px] border-white py-3">

              </div>
              <div>
                <div class="flex justify-between mb-3 mt-3">
                  <span class="text-lg">Tổng tiền: </span>
                  <span class="text-lg total_money" style="color: #ffc107">1899990</span>
                </div>
                <a class="px-2 py-1 block text-lg text-center rounded" style="background-color: #ffc107; color:#4a4a4a"
                  href="/cart">Xem Gio Hang</a>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="header-acction-item flex items-center">
        <a href="/account/login" class="text-center flex flex-col text-[#ffc107] font-medium">
          <span class="mb-1"><i class="fa-solid fa-user"></i></span>
          <span class="text-xs">Đăng nhập</span>

        </a>
      </div>
    </div>
  </div>
  <script>
    const header_cart = document.querySelector(".header_cart")
    const cart_modal = document.querySelector(".cart-modal")


    header_cart.addEventListener('click', function (e) {
      cart_modal.classList.toggle("hidden")
    })

    const cart_amount = document.querySelector(".cart_amount");
    const total_money = document.querySelector(".total_money");
    const template_cart = document.querySelector(".template_cart");

    function showCart() {

      let sum = 0;
      let sum_money = 0
      if (localStorage.getItem("cart")) {
        //const template_cart = document.querySelector(".template_cart");
        let storage = localStorage.getItem("cart");
        cart = JSON.parse(storage);
        cart.map((item, index) => {

          sum += item.Quantity
          sum_money += item.Quantity * item.price
          cart_amount.textContent = sum;
          total_money.textContent = `${formatMoney(sum_money)}đ`;

          template_cart.innerHTML += `<div class="flex ">

                  <div class="w-[85px] h-[85px] border border-white overflow-hiden"><img src="${item.img}" alt=""
                      class="cart_img w-full object-cover h-full" /></div>

                  <div class="ml-3 flex-1 flex flex-column justify-between">
                    <h2 class="font-bold cart_name">${item.name}</h2>
                    <span class="cart_size">size: ${item.size}</span>
                    <span class="cart_quantyti">so luong: ${item.Quantity}</span>

                  </div>
                  <div class="relative mr-[10px] flex justify-between flex-column">
                    <span class="text-end "><i class="btn-remove fa-solid fa-rectangle-xmark text-[25px]">
                        ${index}
                      </i></span>
                    <h2>${formatMoney(item.price)}đ</h2>
                    <span class="cover"></span>
                  </div>
                </div>
                <hr class="my-[15px]">
                </hr>`
        });
      } else {

        template_cart.innerHTML = ` <h2>Giỏ hàng trống</h2>`;
        cart_amount.textContent = 0;
        total_money.textContent = 0;
      }
    }


    showCart();



    document.addEventListener("click", function (e) {

      if (e.target.matches(".btn-remove")) {

        const index = Number(e.target.textContent)
        console.log(index)
        let storage = localStorage.getItem("cart");
        let cart = JSON.parse(storage);

        if (cart.length == 1) {
          localStorage.removeItem("cart")
          showCart()
        }
        else if (cart.length > 1) {
          let newCart = [...cart]
          newCart.splice(index, 1);
          console.log(newCart)
          localStorage.removeItem("cart")
          localStorage.setItem("cart", JSON.stringify(newCart))
          template_cart.innerHTML = ""
          showCart()
        }

      }
    })





    function formatMoney(amount, decimalCount = 2, decimal = ".", thousands = ",") {
      try {
        decimalCount = Math.abs(decimalCount);
        decimalCount = isNaN(decimalCount) ? 2 : decimalCount;

        const negativeSign = amount < 0 ? "-" : "";

        let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();
        let j = (i.length > 3) ? i.length % 3 : 0;

        return negativeSign +
          (j ? i.substr(0, j) + thousands : '') +
          i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousands);
      } catch (e) {
        console.log(e)
      }
    };
  </script>
</header>